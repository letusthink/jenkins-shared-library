#!groovy

//使用共享库
@Library('jenkins-shared-library@main') _

//调用函数
def tools = new org.color()
def checkout = new org.checkout()

pipeline {
    agent {
        kubernetes {
            retries 2
            yaml '''
                           apiVersion: v1
kind: Pod
spec:
  containers:
  - name: git
    image: registry.cn-hangzhou.aliyuncs.com/tool-bucket/tool:git
    command:
    - cat
    tty: true              
  - name: golang
    image: golang:1.16.5
    command:
    - cat
    tty: true  
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command: ["/busybox/sh"]
    tty: true
    volumeMounts:  
    - mountPath: "/kaniko/.docker"  
      name: "dockerconfig-volume"                                      
  - name: sonar
    image: sonarsource/sonar-scanner-cli
    command:
    - sleep
    args:
    - 99d 
    volumeMounts:
    - mountPath: "/opt/sonar-scanner/.sonar/cache"
      name: "volume-0"   
  - name: kubectl  
    image: registry.cn-hangzhou.aliyuncs.com/tool-bucket/tool:kubectl
    command:  
    - cat  
    tty: true  
    volumeMounts:  
    - mountPath: "/root/.kube"  
      name: "kubeconfig-volume"                                  
  volumes:
  - name: "volume-0"
    persistentVolumeClaim:
      claimName: "sonar-cache-pvc"   
  - name: "kubeconfig-volume"  
    secret:  
      secretName: "kubeconfig-secret"    
  - name: "dockerconfig-volume"  
    secret:  
      secretName: "dockerconfig-secret"   
            '''
        }
    }
    options {
        skipDefaultCheckout true
    }

    stages{
    stage("GetCode"){
        steps{
            script{
                checkout scmGit(branches: [[name: "${env.branchName}"]], 
                    extensions: [], userRemoteConfigs: [[credentialsId: 'GitHub_SSH_Credentials', 
                    url: "${env.srcUrl}"]])
                sh "ls -l"
                }
            }        
        }
    }
}